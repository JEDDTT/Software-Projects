214046087 
WNE NGONGO

DECLARE
Cursor cur_shopper(shopper_state bb_shopper.shopper_state%type) IS
Select idshopper,firstname,address,city
From bb_shopper
Where shopperstate = shopper_state;

shopperRec cur_shopper%ROWTYPE;
rateRec varchar2(20);
Count number(2):= 0;

BEGIN

OPEN cur_shopper('&shopper_state');

LOOP

FETCH cur_shopper INTO shopperRec ;
EXIT WHEN CUR_SHOPPER%NOTFOUND;
  IF (cur_product.city = 'South Park') THEN

	rate:= 'Risky';
  ELSIF (cur_product.city = 'Greensburg') THEN
	rate:= 'Trustworthy';
  ELSE  
	rate:= 'Normal';

  end if;

dbms_output.put_line(shopperRec .idshopper||' '||shopperRec .firstname||' '||shopperRec .address||' '||
		     shopperRec .city||' '||rate);

Count := Count+1;

END LOOP;


If Count=0 then
  Raise no_data_found;
End if;

dbms_output.put_line('the number of shoppers retrieved is:'||Count)

CLOSE cur_shopper;

EXCEPTION
  When no_data_found then
  dbms_ouput.put_line('The state given as input do not exist');
END;
/



1.2

Create or Replace PROCEDURE Product_ID(productID bb_shopper.productIDe%type)
RETURN boolean IS 
prodname bb_product.productname%type;
price bb_product.productprice%type;
stock bb_product.stock%type;

BEGIN
SELECT productname,price,stock INTO productname,price,stock
FROM bb_product
WHERE productid = productid;

IF sql%found THEN
  RETURN TRUE;
else
  RETURN FALSE;
END IF;

EXCEPTION
   WHEN no data found THEN
	RETURN false;
END;
/


Call------------

DECLARE
productid number(2);
BEGIN
productid:='&productid';
IF product_id(productid) is null) then
  dbms_output.put_line('product does not exit');
ELSIF (v_productid) THEN
  dbms_output.put_line('product exit');
ELSE
  dbms_output.put_line('product exit');
END IF;
END;
/


1.3
Create or replace PROCEDURE spInsertorupdate(productname VARCHAR,description VARCHAR,price NUMBER,stock NUMBER) 
IS
prodname bb_product.productname%type;
price bb_product.productprice%type;
stock bb_product.stock%type;
description bb_product.description%type;
productid bb_product.productid%type;


BEGIN
SELECT productname,prices,stocks,descriptions INTO prodname,price,stock,description
FROM bb_product
WHERE productid=productid;

IF sql%found then
  RETURN true;
ELSE
  RETURN false;

EXCEPTION
  WHEN no_data_found THEN
    RETURN false;

END;
/


CREATE table prod AS (SELECT * FROM bb_product);




Create or Replace PROCEDURE AddUpdate(productid NUMBER) IS

BEGIN
SELECT count(productid) INTO count
FROM bb_products
WHERE productid = prodid;

IF count <> 0 then
  UPDATE bb_product
  set productname =prodname,descripions=description,,prices=price,stocks= stock
  UPDATE Product
  SET stock = stocks + stock
  WHERE productid = prodid,
  prices =price, stocks =stock;
ELSE
INSERT INTO bb_product(productname,productid,description,price,stock)
VALUES(prodname,prodid,description,price,stock)

END if;
END;
/


216148456 
Hlungwani SP


